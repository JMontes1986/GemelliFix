
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserInRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isOwner(docData) {
        return request.auth.uid == docData.requesterId;
    }

    function isAssigned(docData) {
        return request.auth.uid in docData.assignedToIds;
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    match /tickets/{ticketId} {
      allow create: if request.auth != null;

      allow list: if isUserInRole('Administrador');

      allow read: if request.auth != null && 
                  (isOwner(resource.data) || isAssigned(resource.data) || isUserInRole('Administrador'));
      
      allow update: if request.auth != null && 
                     (isOwner(resource.data) || isAssigned(resource.data) || isUserInRole('Administrador'));

      allow delete: if false; 
    }

    match /notifications/{notificationId} {
        allow read, write: if request.auth != null;
    }

    match /logs/{logId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isUserInRole('Administrador');
    }

    match /diagnosis_logs/{logId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isUserInRole('Administrador');
    }
  }
}

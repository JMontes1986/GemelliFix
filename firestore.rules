
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Función para verificar si un usuario tiene un rol de administrador.
    function isAdministrator() {
      return request.auth.token.admin == true;
    }
    
    // Función para verificar si un usuario es el propietario del documento.
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Los administradores pueden leer, escribir y eliminar cualquier perfil de usuario.
      allow read, write, delete: if isAdministrator();
      // Los usuarios pueden leer y actualizar su propio perfil.
      allow read, update: if isOwner(userId);
    }
    
    // Reglas para la colección 'tickets'
    match /tickets/{ticketId} {
      // Los administradores pueden realizar cualquier acción en los tickets.
      allow read, write, delete: if isAdministrator();
      // Los usuarios pueden crear tickets.
      allow create: if request.auth != null;
      // Los usuarios pueden leer los tickets que ellos crearon.
      allow read: if isOwner(request.resource.data.requesterId);
      // El personal de Servicios Generales puede leer los tickets que tienen asignados.
      allow read: if request.auth.uid in resource.data.assignedToIds;
      // El personal de Servicios Generales puede actualizar los tickets que tienen asignados.
      allow update: if request.auth.uid in resource.data.assignedToIds;
    }

    // Reglas para la colección 'notifications'
    match /notifications/{notificationId} {
        // Los usuarios solo pueden leer o actualizar (marcar como leída) sus propias notificaciones.
        allow read, update: if isOwner(resource.data.userId);
        // Los administradores pueden crear notificaciones (acción del servidor).
        allow create: if isAdministrator();
    }
    
    // Reglas para las colecciones de configuración (solo para administradores)
    match /zones/{zoneId} {
      allow read, write: if isAdministrator() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales';
    }
    
    match /sites/{siteId} {
      allow read, write: if isAdministrator() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales';
    }
    
    // Reglas para los eventos del calendario
    match /scheduleEvents/{eventId} {
      allow read: if isAdministrator() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales';
      allow create: if isAdministrator() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales';
      allow update, delete: if isAdministrator();
    }
    
    // Reglas para los logs
    match /logs/{logId} {
      allow read: if isAdministrator();
      allow create: if request.auth != null; // Cualquiera puede generar logs (ej: creación de ticket)
    }

    // Reglas para los logs de diagnóstico (solo para pruebas)
    match /diagnosis_logs/{logId} {
        allow create: if request.auth != null;
    }
  }
}

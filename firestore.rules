rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && getUserRole(request.auth.uid) == 'Administrador';
    }

    // Helper function to check if the user is a technician
    function isTechnician() {
        return isAuthenticated() && getUserRole(request.auth.uid) == 'Servicios Generales';
    }

    // Helper function to check if the user is an auditor
    function isSST() {
        return isAuthenticated() && getUserRole(request.auth.uid) == 'SST';
    }

    // Users can read their own data. Admins can read/write any user data.
    // Admins and Technicians can list other technicians.
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin() || isSST());
      allow list: if isAuthenticated() && (isAdmin() || isTechnician());
      allow create: if isAdmin();
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Tickets can be created by any authenticated user.
    // They can be read by their creator, the admin, SST, or assigned personnel.
    // They can only be updated/deleted by Admin or assigned personnel.
    match /tickets/{ticketId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && 
                    (resource.data.requesterId == request.auth.uid ||
                     isAdmin() || 
                     isSST() || 
                     (isTechnician() && request.auth.uid in resource.data.assignedToIds));
      allow update: if isAuthenticated() && (isAdmin() || (isTechnician() && request.auth.uid in resource.data.assignedToIds));
      allow delete: if isAdmin();
    }

    // Only Admins can manage master data like zones, sites, and categories.
    // Any authenticated user can read them.
    match /zones/{zoneId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /sites/{siteId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Schedule events can be created and read by Admins and Technicians.
    match /scheduleEvents/{eventId} {
      allow read: if isAuthenticated() && (isAdmin() || isTechnician());
      allow write: if isAuthenticated() && (isAdmin() || isTechnician());
    }

    // Users can read their own notifications.
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated(); // Server-side logic creates notifications
    }
    
    // Logs are created by the server and can only be read by Admins or SST.
    match /logs/{logId} {
        allow read: if isAdmin() || isSST();
        allow write: if isAuthenticated(); // Log creation is handled via secure function/server logic
    }
    
    // Diagnosis logs are only for testing purposes. Any authenticated user can write to it.
    match /diagnosis_logs/{logId} {
        allow write: if isAuthenticated();
    }
  }
}

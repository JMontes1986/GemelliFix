rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow get: if request.auth != null;
      allow list, update: if request.auth.token.admin == true;
      allow create: if request.auth != null;
    }

    match /tickets/{ticketId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.requesterId;
      allow update: if request.auth.token.admin == true || request.auth.uid == resource.data.requesterId || request.auth.uid in resource.data.assignedToIds;
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }
    
    match /scheduleEvents/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.token.admin == true;
    }
    
    match /zones/{zoneId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth.token.admin == true;
    }
    
    match /sites/{siteId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth.token.admin == true;
    }

    match /logs/{logId} {
      allow read: if request.auth.token.admin == true;
      allow create: if request.auth != null;
    }
    
    match /diagnosis_logs/{logId} {
      allow create: if request.auth != null;
    }
  }
}

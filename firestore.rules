rules_version = '2';

// deny public access by default
service cloud.firestore {
  match /databases/{database}/documents {
  
    // =============================================================
    // Helper Functions
    // =============================================================
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Custom claims are more secure than checking a document field,
      // as they are verified on the backend with the user's token.
      return isAuth() && request.auth.token.role == 'Administrador';
    }

    function isSST() {
      return isAuth() && request.auth.token.role == 'SST';
    }
    
    function isGeneralServices() {
       return isAuth() && request.auth.token.role == 'Servicios Generales';
    }

    // =============================================================
    // Security Rules for Collections
    // =============================================================

    // Users can read their own profile, Admins can read any profile.
    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || isAdmin());
      // Only Admins can create or update users through a secure backend endpoint.
      allow create, update, delete: if isAdmin();
    }
    
    // Tickets can be created by any authenticated user.
    // They can be read by their requester or by support staff (Admin/SST/General Services).
    // They can only be updated by Admins or assigned technicians.
    match /tickets/{ticketId} {
      allow create: if isAuth();
      allow read: if (isAuth() && request.auth.uid == resource.data.requesterId) || isAdmin() || isSST() || isGeneralServices();
      allow update: if isAdmin() || (isGeneralServices() && request.auth.uid in resource.data.assignedToIds);
      allow delete: if isAdmin();
    }

    // Schedule events can be created and managed by Admins.
    // Technicians can read their own events.
    match /scheduleEvents/{eventId} {
      allow read: if isAdmin() || (isGeneralServices() && request.auth.uid == resource.data.technicianId);
      allow create, update, delete: if isAdmin();
    }
    
    // Notifications are private to each user.
    match /notifications/{notificationId} {
      allow read, update: if isAuth() && request.auth.uid == resource.data.userId;
      // Notifications are created server-side by Cloud Functions.
      allow create, delete: if false; 
    }

    // Master data (zones, sites, categories) is read-only for authenticated users.
    // Only Admins can modify them.
    match /zones/{zoneId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    match /sites/{siteId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    // Logs can only be created by the backend. No client-side access is allowed.
    match /logs/{logId} {
        allow read, write: if false;
    }
    
    match /diagnosis_logs/{logId} {
       allow read, write: if isAuth();
    }
  }
}

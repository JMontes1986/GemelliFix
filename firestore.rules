
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is authenticated, the user document exists, and the role is 'Administrador'
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador';
    }

    match /users/{userId} {
      allow list: if isAdmin();
      allow read: if isAdmin() || request.auth.uid == userId;
      allow update: if isAdmin() || request.auth.uid == userId;
      allow create, delete: if isAdmin();
    }

    match /tickets/{ticketId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.requesterId
                  || (resource.data.assignedToIds != null
                      && request.auth.uid in resource.data.assignedToIds);
      allow list: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if isAdmin() || (resource.data.assignedToIds != null
                                     && request.auth.uid in resource.data.assignedToIds);
      allow delete: if isAdmin();
    }

    match /zones/{id}        { allow read: if true;  allow write: if isAdmin(); }
    match /sites/{id}        { allow read: if true;  allow write: if isAdmin(); }
    match /categories/{id}   { allow read: if true;  allow write: if isAdmin(); }

    match /notifications/{id} {
      allow read, list, update: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth != null;
    }
    
    match /diagnosis_logs/{id} {
        allow read, write: if request.auth != null;
    }

    match /logs/{id} {
      allow read, list: if isAdmin();
      allow create: if request.auth != null;
    }

    match /scheduleEvents/{eventId} {
      allow read, list: if request.auth != null;
      allow create: if request.auth != null; // Allow any authenticated user to create events
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.technicianId;
    }
  }
}

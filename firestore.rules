rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador';
    }
    
    // Users collection can be read by anyone, but only the user themselves or an admin can write.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();
    }
    
    // Tickets can be created by any authenticated user.
    // Reading is complex: Admins, SST, the assigned tech, or the requester can read.
    // Writing/Updating is restricted to Admins and assigned techs.
    match /tickets/{ticketId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                    (isAdmin() || 
                     resource.data.requesterId == request.auth.uid || 
                     request.auth.uid in resource.data.assignedToIds ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'SST');
      allow update: if request.auth != null && 
                      (isAdmin() || request.auth.uid in resource.data.assignedToIds);
    }
    
    // Master data (zones, sites, categories) can be read by anyone authenticated, but only written by admins.
    match /zones/{zoneId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /sites/{siteId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Notifications are private to the user they are assigned to.
    match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Schedule events can be read by any authenticated user, but only created/updated by Admins or Service personnel.
    match /scheduleEvents/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null &&
                      (isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales');
    }
    
    // Logs can only be created by the system (via server-side code). No client-side read/write.
    match /logs/{logId} {
      allow read, write: if false; 
    }

    // Requisitions can only be managed by administrators
    match /requisitions/{requisitionId} {
      allow create, read, list, update: if isAdmin();
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Función para verificar si un usuario es administrador
    function isAdmin() {
      // Obtiene el documento del usuario que hace la solicitud desde la colección 'users'
      // y verifica si su campo 'role' es 'Administrador'.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador';
    }
    
    // Función para verificar si el usuario es el solicitante del ticket
    function isRequester(ticket) {
      return request.auth.uid == ticket.requesterId;
    }
    
    // Función para verificar si el usuario está asignado al ticket
    function isAssigned(ticket) {
      return request.auth.uid in ticket.assignedToIds;
    }

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Los administradores pueden leer y escribir cualquier perfil de usuario.
      // Los usuarios autenticados pueden leer y actualizar su propio perfil.
      allow read, update: if isAdmin() || request.auth.uid == userId;
      // Los administradores pueden crear y eliminar usuarios.
      allow create, delete: if isAdmin();
    }

    // Reglas para la colección 'tickets'
    match /tickets/{ticketId} {
      // Los administradores pueden leer cualquier ticket.
      // Los usuarios autenticados pueden leer los tickets que han creado o que se les han asignado.
      allow read: if isAdmin() || isRequester(resource.data) || isAssigned(resource.data);
      
      // Cualquier usuario autenticado puede crear un nuevo ticket.
      allow create: if request.auth.uid != null;
      
      // REGLAS DE ACTUALIZACIÓN REFORZADAS
      allow update: if isAdmin() || // El administrador puede hacer cualquier cambio
                      (isAssigned(resource.data) && request.resource.data.status in ['En Progreso', 'Resuelto', 'Requiere Aprobación']) || // El técnico actualiza a estados específicos
                      (isRequester(resource.data) && request.resource.data.status in ['Cerrado', 'Asignado']); // El solicitante aprueba o rechaza

      // Solo los administradores pueden eliminar tickets.
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección 'notifications'
    match /notifications/{notificationId} {
       // Un usuario solo puede leer o actualizar sus propias notificaciones
       allow read, update: if request.auth.uid == resource.data.userId;
       // Un usuario solo puede crear notificaciones para sí mismo (o el servidor).
       allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Reglas para logs y otras colecciones
    match /diagnosis_logs/{logId} {
        // Cualquier usuario autenticado puede crear un log de diagnóstico.
        allow create: if request.auth.uid != null;
        // Nadie puede leer, actualizar o borrar logs desde el cliente (solo desde el servidor si es necesario).
        allow read, update, delete: if false;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    // REGLA GLOBAL PARA ADMINISTRADORES
    // Otorga acceso total de lectura y escritura a cualquier usuario
    // cuyo token de autenticación tenga el claim 'admin' = true.
    // Esto es fundamental para que el dashboard y las vistas de gestión
    // funcionen correctamente.
    // =================================================================
    match /{document=**} {
      allow read, write: if request.auth.token.admin == true;
    }

    // =================================================================
    // COLECCIÓN DE USUARIOS (users)
    // =================================================================
    match /users/{userId} {
      // Un usuario puede leer y actualizar su propio perfil.
      allow read, update: if request.auth.uid == userId;
      // Los administradores (definidos por el claim 'admin') pueden crear y eliminar usuarios.
      allow create, delete: if request.auth.token.admin == true;
    }

    // =================================================================
    // COLECCIÓN DE TICKETS (tickets)
    // =================================================================
    match /tickets/{ticketId} {
      // Cualquiera autenticado puede crear un ticket.
      allow create: if request.auth != null;
      
      // Los administradores pueden leer y escribir en cualquier ticket.
      allow read, write: if request.auth.token.admin == true;

      // El solicitante puede leer su propio ticket.
      allow read: if request.auth.uid == resource.data.requesterId;
      
      // El técnico asignado puede leer y actualizar el ticket.
      allow read, update: if request.auth.uid in resource.data.assignedToIds;
    }
    
    // =================================================================
    // COLECCIÓN DE EVENTOS DEL CALENDARIO (scheduleEvents)
    // =================================================================
    match /scheduleEvents/{eventId} {
       // Cualquiera autenticado puede leer eventos para visualizarlos en el calendario.
      allow read: if request.auth != null;
      // Solo los administradores pueden crear, actualizar o eliminar eventos.
      allow write: if request.auth.token.admin == true;
    }

    // =================================================================
    // COLECCIÓN DE NOTIFICACIONES (notifications)
    // =================================================================
    match /notifications/{notificationId} {
      // Un usuario puede leer o actualizar (marcar como leída) sus propias notificaciones.
      allow read, update: if request.auth.uid == resource.data.userId;
      // Nadie más puede acceder a las notificaciones de otros.
    }
    
    // =================================================================
    // COLECCIÓN DE ZONAS Y SITIOS (zones, sites)
    // =================================================================
    match /zones/{zoneId} {
        allow read: if request.auth != null;
        allow write: if request.auth.token.admin == true;
    }
    
    match /sites/{siteId} {
       allow read: if request.auth != null;
       allow write: if request.auth.token.admin == true;
    }

    // =================================================================
    // COLECCIÓN DE LOGS DE DIAGNÓSTICO Y AUDITORÍA (diagnosis_logs, logs)
    // =================================================================
    match /diagnosis_logs/{logId} {
      // Cualquiera autenticado puede crear un log de diagnóstico.
      allow create: if request.auth != null;
    }
    
    match /logs/{logId} {
       // Los logs solo pueden ser leídos por administradores.
       allow read: if request.auth.token.admin == true;
       // La creación de logs se gestiona desde el backend (funciones), no se permite desde el cliente.
       allow write: if false;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Helper para verificar el rol del usuario desde su token de autenticación.
    function hasRole(role) {
      return isSignedIn() && request.auth.token.role == role;
    }

    function isAdmin() { return hasRole('Administrador'); }
    function isSST()   { return hasRole('SST'); }
    function isTech()  { return hasRole('Servicios Generales'); }

    // USERS:
    // Los usuarios pueden leer su propio perfil.
    // Los administradores pueden leer y escribir en cualquier perfil.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin() || isSST());
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // TICKETS:
    // Las reglas se basan en el rol y la propiedad del ticket.
    match /tickets/{ticketId} {
      allow get: if (isSignedIn() && request.auth.uid == resource.data.requesterId) || isAdmin() || isSST() || (isTech() && request.auth.uid in resource.data.assignedToIds);
      
      allow list: if isAdmin() || isSST() || isTech() || (isSignedIn() && request.query.where('requesterId', '==', request.auth.uid));

      allow create: if isSignedIn();
      
      allow update: if isAdmin() || (isTech() && request.auth.uid in resource.data.assignedToIds);
      
      allow delete: if isAdmin();
    }

    // SCHEDULE EVENTS:
    // Solo los administradores y técnicos pueden gestionar el calendario.
    match /scheduleEvents/{eventId} {
      allow read: if isSignedIn();
      allow create: if isAdmin() || isTech();
      allow update, delete: if isAdmin();
    }

    // NOTIFICATIONS:
    // Cada usuario solo puede gestionar sus propias notificaciones.
    match /notifications/{notificationId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn();
      allow list: if isSignedIn() && request.query.where('userId', '==', request.auth.uid);
    }

    // LOGS:
    // Solo los administradores y auditores (SST) pueden leer todos los logs.
    // Los demás usuarios no pueden acceder directamente a la colección de logs.
    match /logs/{logId} {
      allow read: if isAdmin() || isSST();
      allow list: if isAdmin() || isSST();
      allow create: if isSignedIn(); // Cualquiera puede generar un log (la app lo hace).
      allow update, delete: if false; // Los logs son inmutables.
    }

    // DATOS MAESTROS (Zonas, Sitios, Categorías):
    // Cualquiera puede leerlos, solo los administradores pueden modificarlos.
    match /zones/{zoneId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /sites/{siteId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // DIAGNOSIS LOGS:
    // Usado para pruebas, cualquiera que esté logueado puede escribir aquí.
    match /diagnosis_logs/{logId} {
      allow read, write: if isSignedIn();
    }
  }
}

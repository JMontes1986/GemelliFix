rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador';
    }
    
    // Helper function to check for SST role
    function isSST() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'SST';
    }
    
    // Helper function to check for tech role
    function isTech() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Servicios Generales';
    }

    // Users: Authenticated users can read profiles. Only the user or an admin can update.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if isAdmin(); // User creation is handled by admin API
      allow update: if request.auth.uid == userId || isAdmin();
    }

    // Tickets: Detailed rules based on roles
    match /tickets/{ticketId} {
      allow read: if 
          isAdmin() || 
          isSST() ||
          (resource.data.requesterId == request.auth.uid) ||
          (request.auth.uid in resource.data.assignedToIds);

      allow create: if request.auth != null; // Anyone logged in can create a ticket

      allow update: if 
          isAdmin() || 
          (isTech() && request.auth.uid in resource.data.assignedToIds) ||
          (resource.data.requesterId == request.auth.uid && resource.data.status == 'Abierto');
    }

    // ScheduleEvents: Only admins can create/update/delete. All authenticated can read.
    match /scheduleEvents/{eventId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Notifications: Only readable by the assigned user. System creates them.
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // System/backend creates, but allow for now.
    }
    
    // Data Masters: Zones, Sites, Categories. Admin can write, all can read.
    match /zones/{zoneId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /sites/{siteId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Logs: Created by backend. Admins can read.
    match /logs/{logId} {
        allow read: if isAdmin();
        allow write: if false; // Only backend can write logs.
    }

    // Diagnosis Logs: a collection for testing write permissions.
    match /diagnosis_logs/{logId} {
      allow write: if request.auth != null;
    }
  }
}

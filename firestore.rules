rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helpers ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Helper que SÍ lee de /users. Usar solo en colecciones que NO sean /users.
    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    
    function isAdmin() {
      return isSignedIn() && getRole(request.auth.uid) == 'Administrador';
    }

    function isTech() {
      return isSignedIn() && getRole(request.auth.uid) == 'Servicios Generales';
    }

    function isSST() {
      return isSignedIn() && getRole(request.auth.uid) == 'SST';
    }
    
    function canReadTicket(ticketId) {
      let ticketData = get(/databases/$(database)/documents/tickets/$(ticketId)).data;
      return isAdmin() || isSST() || 
             (isTech() && request.auth.uid in ticketData.assignedToIds) || 
             isOwner(ticketData.requesterId);
    }
    
    // --- Colecciones ---

    // REGLA CLAVE: Simplificada para evitar recursión y permitir autocreación.
    match /users/{userId} {
      // El dueño siempre puede leer y escribir su propio documento.
      allow read, write: if isOwner(userId);
      
      // Solo los administradores pueden listar todos los usuarios.
      allow list: if isAdmin();
    }

    match /tickets/{ticketId} {
      allow read: if canReadTicket(ticketId);
      allow create: if isSignedIn();
      allow update: if isAdmin() || (isTech() && request.auth.uid in resource.data.assignedToIds);
      // La consulta (list) se filtra en el cliente, y la regla 'read' protege cada documento.
      allow list: if isSignedIn();
    }

    match /scheduleEvents/{eventId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin() || isTech();
    }

    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      // Permitir la creación a cualquier usuario autenticado (para notificaciones del sistema)
      allow create, list: if isSignedIn();
    }

    match /logs/{logId} {
      // Solo se puede leer el log si se puede leer el ticket asociado.
      allow read: if canReadTicket(resource.data.details.ticketId);
      allow list, create: if isSignedIn();
      allow write: if false; // Los logs son inmutables.
    }

    // --- Datos Maestros (solo Admin) ---
    match /zones/{zoneId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /sites/{siteId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /diagnosis_logs/{logId} {
      allow read, write: if isSignedIn();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
    }
    
    function getRole() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isAdmin() {
        return isSignedIn() && getRole() in ['Administrador'];
    }
    
    function isSST() {
        return isSignedIn() && getRole() in ['SST'];
    }
    
    function isServiceUser() {
        return isSignedIn() && getRole() in ['Servicios Generales'];
    }

    // Collection: users
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin() || isSST();
      allow list: if isAdmin();
      allow create: if isSignedIn(); // Allow self-registration
      allow update: if isOwner(userId) || isAdmin();
    }

    // Collection: tickets
    match /tickets/{ticketId} {
      allow read: if (isOwner(resource.data.requesterId) || isAdmin() || isSST() || isServiceUser());
      allow list: if (isAdmin() || isSST() || request.query.where.requesterId == request.auth.uid);
      allow create: if isSignedIn();
      allow update: if (isAdmin() || (isServiceUser() && request.auth.uid in resource.data.assignedToIds)) || 
                       (isOwner(resource.data.requesterId) && resource.data.status != 'Cerrado' && resource.data.status != 'Cancelado');
      allow delete: if isAdmin();
    }

    // Collection: notifications
    match /notifications/{notificationId} {
      allow read, list, update: if isOwner(resource.data.userId);
      allow create: if isSignedIn(); // Allows server-side processes to create notifications
    }

    // Collection: scheduleEvents
    match /scheduleEvents/{eventId} {
      allow read, list: if isSignedIn();
      allow create: if isAdmin() || isServiceUser();
      allow update, delete: if isAdmin() || (isServiceUser() && isOwner(resource.data.technicianId));
    }
    
    // Collections: zones, sites, categories (Master Data)
    match /zones/{zoneId} {
        allow read: if isSignedIn();
        allow list, create, update, delete: if isAdmin();
    }
     match /sites/{siteId} {
        allow read: if isSignedIn();
        allow list, create, update, delete: if isAdmin();
    }
     match /categories/{categoryId} {
        allow read: if isSignedIn();
        allow list, create, update, delete: if isAdmin();
    }
    
    // Collection: logs
    match /logs/{logId} {
        allow read, list: if isAdmin() || isSST();
        allow create: if isSignedIn(); // Allow server-side processes to create logs
    }
  }
}

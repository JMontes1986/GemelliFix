
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'Administrador';
    }
    
    function isSST() {
      return request.auth != null && request.auth.token.role == 'SST';
    }

    function isServiceUser() {
      return request.auth != null && request.auth.token.role == 'Servicios Generales';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Unprotected collection for diagnostics
    match /diagnosis_logs/{logId} {
      allow read, write: if request.auth != null;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /tickets/{ticketId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.requesterId || isAdmin() || isSST();
      // Allow users to list tickets if they are the requester, or if they are an admin/SST.
      allow list: if isAdmin() || isSST() || (request.query.where.requesterId == request.auth.uid);
      allow update: if isServiceUser() || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /zones/{zoneId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
     match /sites/{siteId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    match /scheduleEvents/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isServiceUser() || isAdmin();
    }
    
    match /logs/{logId} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }
  }
}

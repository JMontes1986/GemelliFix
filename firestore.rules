rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Function to check if the user has the 'Administrador' role via custom claims
    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'Administrador';
    }
    
    // Function to check if the user has the 'Servicios Generales' role
    function isServiceUser() {
        return isSignedIn() && request.auth.token.role == 'Servicios Generales';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow get: if isSignedIn() && (isAdmin() || request.auth.uid == userId);
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for tickets
    match /tickets/{ticketId} {
       allow read, create: if isSignedIn();
       allow update: if isAdmin() || isServiceUser() || (resource.data.status == 'Abierto' && request.auth.uid == resource.data.requesterId);
       allow delete: if isAdmin();
    }

    // Rules for schedule events
    match /scheduleEvents/{eventId} {
        allow read, update, delete: if isAdmin() || (isServiceUser() && request.auth.uid == resource.data.technicianId);
        allow create: if isSignedIn();
    }

    // Rules for master data collections
    match /{collection=zones,sites,categories}/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Rules for logs
     match /logs/{logId} {
      allow read: if isAdmin();
      allow create: if isSignedIn();
      allow write: if false; // Only allow creation
    }
    
    // Rules for notifications
    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && request.auth.uid == resource.data.userId;
        allow list: if isSignedIn();
        allow create: if isSignedIn(); // Allow backend services to create notifications
        allow delete: if false;
    }
    
    match /diagnosis_logs/{logId} {
        allow write: if isSignedIn();
        allow read: if false;
    }
  }
}

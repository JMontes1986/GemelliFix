
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // General rule: By default, nobody can read or write.
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Avatars: Allow public read access, but write is restricted.
    match /avatars/{userId}/{fileName} {
      allow read;
      allow write: if request.auth != null && (
          // The user is updating their own avatar
          request.auth.uid == userId ||
          // OR the user is an Administrator
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador'
      );
    }
    
    // Ticket Attachments: Only authenticated users can upload.
    // Reading should be restricted based on who can see the ticket.
    match /ticket-attachments/{fileName} {
      allow write: if request.auth != null;
      // To secure reads, you would typically check if the user's ID is in the ticket's
      // assignedToIds or if they are the requesterId. This requires linking storage to firestore docs.
      // For now, allow read for any authenticated user.
      allow read: if request.auth != null; 
    }

    // Ticket Evidence: Same rules as attachments.
    match /ticket-evidence/{ticketId}/{fileName} {
       allow write: if request.auth != null;
       allow read: if request.auth != null;
    }
  }
}

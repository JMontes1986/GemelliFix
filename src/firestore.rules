rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =============================================================
    // Helper Functions
    // =============================================================
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isUserAuthenticated() && request.auth.uid == uid;
    }
    
    function isAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrador';
    }

    function isSST() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'SST';
    }
    
    function isOwner(doc) {
      return isUser(doc.data.requesterId);
    }
    
    // =============================================================
    // Collection Rules
    // =============================================================
    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow create: if isUserAuthenticated();
      allow update: if isUser(userId) || isAdmin();
    }
    
    match /tickets/{ticketId} {
      // READ:
      // - Admins and SST can read any ticket.
      // - Users can read tickets they created.
      allow read: if isAdmin() || isSST() || isOwner(resource);
      
      // LIST:
      // - Only Admins and SST can list all tickets.
      // - Requesters query their own tickets, which is covered by the 'read' rule on individual documents.
      allow list: if isAdmin() || isSST();

      // WRITE:
      // - Any authenticated user can create a ticket.
      // - Only Admins or the owner can update a ticket.
      allow create: if isUserAuthenticated();
      allow update: if isAdmin() || isOwner(resource);
    }

    match /zones/{zoneId} {
      allow read: if isUserAuthenticated();
      allow write: if isAdmin();
    }
    
    match /sites/{siteId} {
       allow read: if isUserAuthenticated();
       allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
       allow read: if isUserAuthenticated();
       allow write: if isAdmin();
    }

    match /scheduleEvents/{eventId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isAdmin() || request.auth.uid == resource.data.technicianId;
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isUser(resource.data.userId);
      allow create: if isUserAuthenticated();
    }

    match /logs/{logId} {
      allow read: if isAdmin();
      allow create: if isUserAuthenticated();
    }
    
    // Default Deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
